name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          sudo dockerd > /tmp/dockerd.log 2>&1 &
          sleep 10
          sudo docker info

      - name: Create CI environment file
        run: |
          echo "POSTGRES_USER=dev_user" >> .env
          echo "POSTGRES_PASSWORD=dev_password" >> .env
          echo "POSTGRES_DB=dev_db" >> .env
          echo "POSTGRES_HOST=db" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "SECRET_KEY=secret_key" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "DEBUG=True" >> .env

      - name: Build Docker image
        run: docker build --no-cache -t fastapi-docker .

      - name: Start test environment
        run: docker compose -f docker-compose.yml --env-file .env up -d --build --force-recreate --wait
          
      - name: Run tests with pytest
        run: docker exec web pytest -v /app/tests
        env:
          PYTHONPATH: /app

      - name: Save logs if failed
        if: failure()
        run: docker compose -f docker-compose.yml logs

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.yml down --volumes --remove-orphans
